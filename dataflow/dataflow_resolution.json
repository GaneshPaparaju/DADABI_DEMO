{
	"name": "dataflow_resolution",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_sales_fact",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTableCust_dim",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_sales_fact",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JOB_ID as string (\"UPDATE\")",
				"}",
				"source(output(",
				"          INVOICE_SK as decimal(38,0),",
				"          INVOICE_ID as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_SK as decimal(38,0),",
				"          INVOICE_DT as date,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL_PRODUCT_COST as double,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          BILL_TO as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source2",
				"source1 filter(isNull(CUSTOMER_SK)) ~> filter1",
				"filter1, source2 join(source1@CUSTOMER_ID == source2@CUSTOMER_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(CUSTOMER_SK_new = source2@CUSTOMER_SK,",
				"          pid = $JOB_ID,",
				"          DI_CreatedDt = currentDate()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          INVOICE_SK as decimal(38,0),",
				"          INVOICE_ID as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_SK as decimal(38,0),",
				"          INVOICE_DT as date,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL_PRODUCT_COST as double,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          INVOICE_SK,",
				"          INVOICE_ID,",
				"          CUSTOMER_ID = source1@CUSTOMER_ID,",
				"          CUSTOMER_SK = CUSTOMER_SK_new,",
				"          INVOICE_DT,",
				"          TOTAL_PRODUCT_CNT,",
				"          TOTAL_PRODUCT_COST,",
				"          DI_CREATEDDT = derivedColumn1@DI_CreatedDt,",
				"          PID = derivedColumn1@pid",
				"     )) ~> sink1"
			]
		}
	}
}